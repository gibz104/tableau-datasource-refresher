# Run tests using tox

name: "Tests"

on:
  push:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main


defaults:
  run:
    shell: bash

jobs:
  tests:
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"

    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"

    steps:
      - name: "Check out code"
        uses: actions/checkout@v3

      - name: "Set up Python env"
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Install Poetry"
        uses: snok/install-poetry@v1

      - name: "Install dependencies"
        run: |
          python -m pip install tox tox-gh-actions
          poetry install
      - name: "Run tox for ${{ matrix.python-version }}"
        run: |
          python -m tox
      - name: "Upload coverage data"
        uses: actions/upload-artifact@v3
        with:
          name: covdata
          path: .coverage.*

  coverage:
    name: Coverage
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: "Check out code"
        uses: actions/checkout@v3

      - name: "Set up Python env"
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: "Install Poetry"
        uses: snok/install-poetry@v1

      - name: "Install dependencies"
        run: |
          python -m pip install tox tox-gh-actions
          poetry install
      - name: "Download coverage data"
        uses: actions/download-artifact@v3
        with:
          name: covdata

      - name: "Combine coverage data"
        run: |
          python -m tox -e coverage
          export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
          echo "total=$TOTAL" >> $GITHUB_ENV
          echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY
      - name: "Make test coverage badge"
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          # GIST_TOKEN is a GitHub personal access token with scope "gist".
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: 465cb74d7d8ba19a655fba50d0ce3665
          filename: covbadge-tableau-datasource-refresher.json
          label: Coverage
          message: ${{ env.total }}%
          minColorRange: 50
          maxColorRange: 90
          valColorRange: ${{ env.total }}